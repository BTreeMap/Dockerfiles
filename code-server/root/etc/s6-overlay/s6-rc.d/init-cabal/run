#!/usr/bin/with-contenv bash

# This script initializes cabal by creating the specified directory,
# optionally setting permissions to 777, and optionally updating the package list.
#
# Environment variables:
#   CABAL_DIR             Directory for storing cabal data (default: /config/.haskell)
#   CABAL_UPDATE_PACKAGES Boolean to control if 'cabal update' should run (default: true)

# Set PUID and PGID from environment or default to 1000
: "${PUID:=1000}"
: "${PGID:=1000}"

# Set default options for cabal behavior if not defined externally
: "${CABAL_DIR:=/config/.haskell}" # Default directory for cabal
: "${CABAL_UPDATE_PACKAGES:=true}" # Enables cabal update by default

# Helper function to determine if a value is "truthy"
is_truthy() {
    local val
    # Return false if variable is not set or empty
    if [ -z "$1" ]; then
        return 1
    fi
    
    # Convert to lowercase
    val=$(echo "$1" | tr '[:upper:]' '[:lower:]')
    
    # Check for truthy values
    case "$val" in
        true|yes|1|on|y)
            return 0 # True
            ;;
        *)
            return 1 # False
            ;;
    esac
}

# Create CABAL_DIR if it doesn't exist
if [ ! -d "$CABAL_DIR" ]; then
  echo "INFO: Creating directory: $CABAL_DIR"
  if ! mkdir -p "$CABAL_DIR"; then
    echo "WARN: Failed to create directory $CABAL_DIR" >&2
    exit 1
  fi
fi

# Set ownership of CABAL_DIR to PUID:PGID
echo "INFO: Setting ownership of $CABAL_DIR to ${PUID}:${PGID}"
if ! chown -R "${PUID}:${PGID}" "$CABAL_DIR"; then
  echo "WARN: Failed to set ownership for $CABAL_DIR" >&2
  exit 1
fi

if is_truthy "$CABAL_UPDATE_PACKAGES"; then
  if [ ! -d "$CABAL_DIR/packages/hackage.haskell.org" ]; then
    echo "INFO: Updating cabal packages"
    if ! s6-setuidgid "${PUID}:${PGID}" cabal update; then
      echo "WARN: cabal update failed" >&2
      exit 1
    fi
  else
    echo "INFO: Skipping cabal update - package list already exists"
  fi
else
  echo "INFO: Skipping cabal update - environment variable is set to false"
fi
